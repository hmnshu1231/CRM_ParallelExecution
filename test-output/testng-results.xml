<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="68680" started-at="2018-08-30T14:43:39Z" finished-at="2018-08-30T14:44:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="68680" started-at="2018-08-30T14:43:39Z" finished-at="2018-08-30T14:44:48Z">
      <class name="com.crm.qa.testcases.SignUpPageTest">
        <test-method status="PASS" signature="testStart()[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="testStart" is-config="true" duration-ms="4608" started-at="2018-08-30T20:13:39Z" finished-at="2018-08-30T20:13:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStart -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="setUp" is-config="true" duration-ms="18730" started-at="2018-08-30T20:13:44Z" finished-at="2018-08-30T20:14:03Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="initialization" is-config="true" duration-ms="16417" started-at="2018-08-30T20:14:03Z" depends-on-methods="com.crm.base.TestEnvironment.setUp" finished-at="2018-08-30T20:14:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="beforeMethod" is-config="true" duration-ms="12" started-at="2018-08-30T20:14:19Z" finished-at="2018-08-30T20:14:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.qa.testcases.SignUpPageTest.verifySignUpCrmLogoTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifySignUpCrmLogoTest()[pri:1, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="verifySignUpCrmLogoTest" duration-ms="1892" started-at="2018-08-30T20:14:19Z" finished-at="2018-08-30T20:14:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpCrmLogoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:21Z" finished-at="2018-08-30T20:14:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignUpCrmLogoTest status=SUCCESS method=SignUpPageTest.verifySignUpCrmLogoTest()[pri:1, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:21Z" finished-at="2018-08-30T20:14:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.qa.testcases.SignUpPageTest.verifyEditionTextTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEditionTextTest()[pri:2, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="verifyEditionTextTest" duration-ms="3495" started-at="2018-08-30T20:14:21Z" finished-at="2018-08-30T20:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEditionTextTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:25Z" finished-at="2018-08-30T20:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEditionTextTest status=SUCCESS method=SignUpPageTest.verifyEditionTextTest()[pri:2, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:25Z" finished-at="2018-08-30T20:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.qa.testcases.SignUpPageTest.validateSignUpPageTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateSignUpPageTest()[pri:3, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="validateSignUpPageTest" duration-ms="5835" started-at="2018-08-30T20:14:25Z" finished-at="2018-08-30T20:14:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSignUpPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:30Z" finished-at="2018-08-30T20:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSignUpPageTest status=SUCCESS method=SignUpPageTest.validateSignUpPageTest()[pri:3, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:30Z" finished-at="2018-08-30T20:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.qa.testcases.SignUpPageTest.signUpPageAllFieldsTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="signUpPageAllFieldsTest()[pri:4, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="signUpPageAllFieldsTest" duration-ms="13054" started-at="2018-08-30T20:14:30Z" finished-at="2018-08-30T20:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpPageAllFieldsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:43Z" finished-at="2018-08-30T20:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpPageAllFieldsTest status=SUCCESS method=SignUpPageTest.signUpPageAllFieldsTest()[pri:4, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-30T20:14:43Z" finished-at="2018-08-30T20:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.qa.testcases.SignUpPageTest.verifySignUpFieldTextTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifySignUpFieldTextTest()[pri:5, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="verifySignUpFieldTextTest" duration-ms="212" started-at="2018-08-30T20:14:43Z" finished-at="2018-08-30T20:14:44Z">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: Unable to locate an element with the xpath expression //span[contain(text(),'All fields are required.')] because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contain(text(),'All fields are required.')]' is not a valid XPath expression.
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'HIMANSHU-PC', ip: '192.168.0.102', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.39.562718 (9a2698cba08cf5..., userDataDir: C:\Users\Himanshu\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.106, webStorageEnabled: true}
Session ID: 81c0307e834ef8202394d8baef9b43ea
*** Element info: {Using=xpath, value=//span[contain(text(),'All fields are required.')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression //span[contain(text(),'All fields are required.')] because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contain(text(),'All fields are required.')]' is not a valid XPath expression.
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'HIMANSHU-PC', ip: '192.168.0.102', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.39.562718 (9a2698cba08cf5..., userDataDir: C:\Users\Himanshu\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.106, webStorageEnabled: true}
Session ID: 81c0307e834ef8202394d8baef9b43ea
*** Element info: {Using=xpath, value=//span[contain(text(),'All fields are required.')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
	at com.sun.proxy.$Proxy13.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy17.isDisplayed(Unknown Source)
	at com.crm.pages.SignUpPage.verifyFieldText(SignUpPage.java:88)
	at com.crm.qa.testcases.SignUpPageTest.verifySignUpFieldTextTest(SignUpPageTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpFieldTextTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="afterMethod" is-config="true" duration-ms="1202" started-at="2018-08-30T20:14:44Z" finished-at="2018-08-30T20:14:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignUpFieldTextTest status=FAILURE method=SignUpPageTest.verifySignUpFieldTextTest()[pri:5, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="tearDown" is-config="true" duration-ms="1599" started-at="2018-08-30T20:14:45Z" finished-at="2018-08-30T20:14:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testResult()[pri:0, instance:com.crm.qa.testcases.SignUpPageTest@4566e5bd]" name="testResult" is-config="true" duration-ms="1500" started-at="2018-08-30T20:14:47Z" finished-at="2018-08-30T20:14:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResult -->
      </class> <!-- com.crm.qa.testcases.SignUpPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
